services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                WWWGROUP: 1000
        image: "app:latest"
        # deploy:
        #     resources:
        #         limits:
        #             cpus: "1"
        #             memory: 2048M
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            # - '${VITE_PORT:-5173}:5173'
            # - '443:443'
            # - '443:443/udp'
            # - '2019:2019'
            # - "${FORWARD_REVERB_PORT:-8080}:8080"
        environment:
            WWWUSER: 1000
            LARAVEL_APP: 1
            XDEBUG_MODE: "${APP_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${APP_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            XDG_CONFIG_HOME: "/var/www/html/config"
            XDG_DATA_HOME: "/var/www/html/data"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
            SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan serve --host=0.0.0.0 --port=80" # For development, for prod remove it!
            # SUPERVISOR_PHP_COMMAND: "npx concurrently -c \"#93c5fd,#fb7185,#fdba74\" \"php -d variables_order=EGPCS /var/www/html/artisan serve --host=0.0.0.0 --port=80\" \"php artisan pail --timeout=0\" \"npm run dev\" --names=server,logs,vite" # For development, for prod remove it!
            SUPERVISOR_REVERB_COMMAND: "/usr/bin/php /var/www/html/artisan reverb:start --host='0.0.0.0' --port=8080 --debug" # For development, for prod remove it!
        volumes:
            - ".:/var/www/html"
        networks:
            - app_net
        # depends_on:
        #     - pgsql
        #     - redis
        #     - meilisearch
    # pgsql:
    #     image: 'postgres:17'
    #     # deploy:
    #     #     resources:
    #     #         limits:
    #     #             cpus: "1"
    #     #             memory: 2048M
    #     ports:
    #         - '${FORWARD_DB_PORT:-5432}:5432'
    #     environment:
    #         PGPASSWORD: '${DB_PASSWORD:-secret}'
    #         POSTGRES_DB: '${DB_DATABASE}'
    #         POSTGRES_USER: '${DB_USERNAME}'
    #         POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    #     volumes:
    #         - 'app-pgsql:/var/lib/postgresql/data'
    #         - './vendor/laravel/app/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    #     networks:
    #         - app_net
    #     healthcheck:
    #         test:
    #             - CMD
    #             - pg_isready
    #             - '-q'
    #             - '-d'
    #             - '${DB_DATABASE}'
    #             - '-U'
    #             - '${DB_USERNAME}'
    #         retries: 3
    #         timeout: 5s
    # redis:
    #     image: 'redis:alpine'
    #     # deploy:
    #     #     resources:
    #     #         limits:
    #     #             cpus: "1"
    #     #             memory: 2048M
    #     ports:
    #         - '${FORWARD_REDIS_PORT:-6379}:6379'
    #     volumes:
    #         - 'app-redis:/data'
    #     networks:
    #         - app_net
    #     healthcheck:
    #         test:
    #             - CMD
    #             - redis-cli
    #             - ping
    #         retries: 3
    #         timeout: 5s
    # meilisearch:
    #     image: 'getmeili/meilisearch:latest'
    #     # deploy:
    #     #     resources:
    #     #         limits:
    #     #             cpus: "1"
    #     #             memory: 2048M
    #     ports:
    #         - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
    #     environment:
    #         MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
    #     volumes:
    #         - 'app-meilisearch:/meili_data'
    #     networks:
    #         - app_net
    #     healthcheck:
    #         test:
    #             - CMD
    #             - wget
    #             - '--no-verbose'
    #             - '--spider'
    #             - 'http://127.0.0.1:7700/health'
    #         retries: 3
    #         timeout: 5s

    # meilisearch_ui:
    #     container_name: meilisearch_ui
    #     image: riccoxie/meilisearch-ui:latest
    #     # deploy:
    #     #     resources:
    #     #         limits:
    #     #             cpus: '0.1'
    #     #             memory: '128M'
    #     restart: unless-stopped
    #     ports:
    #         - "8080:24900"
    #     environment:
    #         MEILISEARCH_URL: "http://meilisearch:7700"
    #     networks:
    #         - app_net
    #     depends_on:
    #         - meilisearch
networks:
    app_net:
        driver: bridge
volumes:
    app-pgsql:
        driver: local
    app-redis:
        driver: local
    app-meilisearch:
        driver: local
